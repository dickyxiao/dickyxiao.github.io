<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Fiddler之基础篇]]></title>
    <url>%2FFiddler%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[Fidder是什么？简介Fiddler（中文名称：小提琴）是一个HTTP的调试代理，以代理服务器的方式，监听系统的Http网络数据流动。可以将网络传送接受或发送的数据包进行截获、重发、编辑及转存等操作，亦可以检查数据包网络传输的安全。Fiddler还包含一个简单却功能强大的基于JScript .NET事件脚本子系统，它可以支持众多的HTTP调试任务。 工作原理fidder是以代理web服务器的形式工作的。浏览器与服务器一般默认是通过建立TCP连接、以http协议进行通信，当浏览器向服务器发送请求或接受服务器返回的数据时，fidder就相当于浏览器与服务器的一道关卡，能够截获他们网络传输的数据包。 整体布局介绍主面板 工具面板 两种模式：缓冲模式（Buffering Mode）：Fiddler直到HTTP响应完成时才将数据返回给应用程序。可以控制响应，修改响应数据。但是时序图有时候会出现异常。流模式（Streaming Mode）：Fiddler会即时将HTTP响应的数据返回给应用程序。更接近真实浏览器的性能。时序图更准确,但是不能控制响应。 会话面板 会话图标 状态面板 监控面板（常用） 二、Fidder有什么用？ 分析页面性能 分析http请求/响应数据 设置断点，调试线上错误 伪造数据请求与返回，调试数据接口 设置模拟网速]]></content>
      <categories>
        <category>接口测试</category>
      </categories>
      <tags>
        <tag>Fiddler</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can f4ind the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
